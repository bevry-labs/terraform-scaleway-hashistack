#!/usr/bin/env bash
set -ueE -o pipefail
cd "$(dirname "$0")"

echo "<service_install $1>"

# Locals
temp="$(mktemp -d)"

# Clean
function finish {
	./shred "$temp"
}
trap finish EXIT

# Functions
function get_version {
	set +o pipefail
	"$1" -v | grep --color=never -Eo '[0-9]+\.[0-9]+\.[0-9]+'
	set -o pipefail
}
function user_exists {
  local user="$1"
  id "$user" >/dev/null 2>&1
}

# Arguments
service="$1"
user="$(cat "../data/input/${service}_user")"
group="$(cat "../data/input/${service}_group")"
expected_version="$(cat "../data/input/${service}_version")"

echo "Downloading $service..."
./service_download "$service" "$expected_version" "$temp/$service.zip"

echo "Unzipping $service..."
unzip -d "$temp" "$temp/$service.zip"
chmod +x "$temp/$service"

echo "Checking $service version..."
version="$(get_version "$temp/$service")"
if test "$version" != "$expected_version"; then
	echo "version was not as expected"
	echo "actual version: $version"
	echo "desired version: $expected_version"
	exit 1
fi

echo "Moving $service into path..."
sudo mv "$temp/$service" "/usr/local/bin/$service"

echo "Detecting $service user $user..."
if ! user_exists "$user"; then
	echo "Adding $service user $user..."
	sudo useradd "$user"
fi

echo "Setting $service executable permissions..."
# make the executable only runnable by the user
sudo chown "$user:$group" "/usr/local/bin/$service"
sudo chmod 0740 "/usr/local/bin/$service"

echo "Adjusting $service executable..."
# ensure sensitive data is written by the system
if test "$service" = "vault"; then
	echo "Adjusting $service executable for vault..."
	sudo setcap cap_ipc_lock=+ep /usr/local/bin/vault
fi

echo "Initialising data for $service..."
# data configuration
rm -Rf "/opt/$service"
mkdir -p "/opt/$service/data"
sudo chmod -R 0740 "/opt/$service"
sudo chown -R "$user:$group" "/opt/$service"

echo '</service_install>'
