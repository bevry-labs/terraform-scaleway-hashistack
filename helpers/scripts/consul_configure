#!/usr/bin/env bash
set -ueE -o pipefail
cd "$(dirname "$0")"

echo ''
echo '<consul_configure>'
echo ''

# Variables
user="$(cat ../data/input/consul_user)"
group="$(cat ../data/input/consul_group)"
consul_type="$(cat ../data/input/consul_type)"
consul_expect="$(cat ../data/input/consul_expect)"
private_ip="$(cat ../data/input/private_ip)"
loopback_ip="$(cat ../data/input/loopback_ip)"
join="$(cat ../data/input/join)"

# Outputs
if test -f ../data/shared/auth/consul_gossip_key; then
	consul_gossip_key="$(cat ../data/shared/auth/consul_gossip_key)"
else
	openssl rand -base64 16 > ../data/output/auth/consul_gossip_key
	consul_gossip_key="$(cat ../data/output/auth/consul_gossip_key)"
fi

# Write configuration files
# "recursors" : [ "1.1.1.1", "1.0.0.1" ],
echo "Writing consul configuration..."
cat > ../data/local/conf/consul.conf <<EOF
[Unit]
Description=consul agent
Requires=network-online.target
After=network-online.target

[Service]
Restart=on-failure
EnvironmentFile=-/etc/sysconfig/consul
ExecStart=/usr/local/bin/consul agent -config-dir=/etc/systemd/system/consul.d
ExecReload=/bin/kill -HUP \$MAINPID
KillSignal=SIGTERM
User=${user}
Group=${group}

[Install]
WantedBy=multi-user.target
EOF

# BASE
cat > ../data/local/conf/consul_base.json <<EOF
{
	"encrypt": "${consul_gossip_key}",
	"ports" : {
		"dns": 53,
		"http": 8500,
		"https": -1
	},
	"ui": true,
	"datacenter": "global",
	"data_dir": "/opt/consul/data",
	"bind_addr": "${private_ip}",
	"client_addr": "${loopback_ip}"
}
EOF

# TLS
# https://www.consul.io/docs/agent/encryption.html#rpc-encryption-with-tls
# https://www.nomadproject.io/guides/securing-nomad.html#node-certificates
cat > ../data/local/conf/consul_tls.json <<EOF
{
	"ports" : {
		"dns": 53,
		"http": -1,
		"https": 8500
	},
	"enable_agent_tls_for_checks": true,
	"verify_incoming": true,
	"verify_outgoing": true,
	"verify_server_hostname": false,
	"key_file": "/etc/certs/consul.key",
	"cert_file": "/etc/certs/consul.crt",
	"ca_file": "/etc/certs/consul.ca"
}
EOF

# ORIGIN
cat > ../data/local/conf/consul_origin.json <<EOF
{
	"bootstrap": true,
	"server": true
}
EOF

# MASTER
cat > ../data/local/conf/consul_master.json <<EOF
{
	"bootstrap_expect": ${consul_expect},
	"server": true,
	"retry_join": ["${join}"]
}
EOF

# SLAVE
cat > ../data/local/conf/consul_slave.json <<EOF
{
	"retry_join": ["${join}"]
}
EOF

# Merge
if test -f /etc/certs/consul.key; then
	echo 'Configuring Consul for TLS...'
	./json_merge \
		../data/local/conf/consul_base.json \
		../data/local/conf/consul_tls.json \
		"../data/local/conf/consul_${consul_type}.json" > ../data/local/conf/consul.json
else
	echo 'Configuring Consul without TLS...'
	./json_merge \
		../data/local/conf/consul_base.json \
		"../data/local/conf/consul_${consul_type}.json" > ../data/local/conf/consul.json
fi

# DNS
echo "Configuring Consul DNS access..."
nameserver_config="nameserver ${loopback_ip}"
if grep "$nameserver_config" < /etc/resolv.conf; then
	echo "nameserver already configured"
else
	echo "$nameserver_config" | cat - /etc/resolv.conf > /tmp/resolv.conf && sudo mv /tmp/resolv.conf /etc/resolv.conf
fi
# we can't just do
# sudo echo "nameserver $LOOPBACK_IP" > /etc/resolv.conf
# becasuse /etc/resolv.conf also contains these, which is necessary for scaleway networking perhaps... we could try add them to the consul resolver, but not sure that works
# nameserver 10.1.94.8
# domain cloud.online.net
# search cloud.online.net

echo ''
echo '</consul_configure>'
echo ''
