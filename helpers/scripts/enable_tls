#!/usr/bin/env bash
set -ueE -o pipefail
cd "$(dirname "$0")"

# Variables
loopback_ip="$(cat ../data/loopback_ip)"
private_ip="$(cat ../data/private_ip)"
public_ip="$(cat ../data/public_ip)"
hostname="$(cat ../data/hostname)"

# Reload vault env
source ./vault_env

# =====================================
# TLS Certificates

echo ''
echo 'Configuring TLS certificates...'

# Allow the creation of certificates
vault write -format=json pki_int/roles/host allowed_domains="$hostname,consul,vault,nomad" allow_subdomains=true max_ttl=72h

echo ''
echo 'Generating TLS certificates...'


# -------------------------------------
# Consul

vault write -format=json pki_int/issue/host common_name="consul.$hostname" alt_names="consul.service.consul,server.global.consul" ip_sans="${private_ip},${loopback_ip},${public_ip}" > ../outputs/vault/pki_int_consul.json
json data.private_key < ../outputs/vault/pki_int_consul.json > ../outputs/certs/consul.key
json data.certificate < ../outputs/vault/pki_int_consul.json > ../outputs/certs/consul.crt
json data.issuing_ca < ../outputs/vault/pki_int_consul.json > ../outputs/certs/consul.ca


# -------------------------------------
# Vault

vault write -format=json pki_int/issue/host common_name="vault.$hostname" alt_names="vault.service.consul,server.global.vault" ip_sans="${private_ip},${loopback_ip},${public_ip}" > ../outputs/vault/pki_int_vault.json
json data.private_key < ../outputs/vault/pki_int_vault.json > ../outputs/certs/vault.key
json data.certificate < ../outputs/vault/pki_int_vault.json > ../outputs/certs/vault.crt
json data.issuing_ca < ../outputs/vault/pki_int_vault.json > ../outputs/certs/vault.ca

# -------------------------------------
# Nomad

# nomad server
vault write -format=json pki_int/issue/host common_name="server.nomad.$hostname" alt_names="server.global.nomad" ip_sans="${private_ip},${loopback_ip},${public_ip}" > ../outputs/vault/pki_int_nomad_server.json
json data.private_key < ../outputs/vault/pki_int_nomad_server.json > ../outputs/certs/nomad_server.key
json data.certificate < ../outputs/vault/pki_int_nomad_server.json > ../outputs/certs/nomad_server.crt
json data.issuing_ca < ../outputs/vault/pki_int_nomad_server.json > ../outputs/certs/nomad_server.ca

# nomad client
vault write -format=json pki_int/issue/host common_name="client.nomad.$hostname" alt_names="client.global.nomad" ip_sans="${private_ip},${loopback_ip},${public_ip}" > ../outputs/vault/pki_int_nomad_client.json
json data.private_key < ../outputs/vault/pki_int_nomad_client.json > ../outputs/certs/nomad_client.key
json data.certificate < ../outputs/vault/pki_int_nomad_client.json > ../outputs/certs/nomad_client.crt
json data.issuing_ca < ../outputs/vault/pki_int_nomad_client.json > ../outputs/certs/nomad_client.ca

# -------------------------------------
# User

# user
vault write -format=json pki_int/issue/host common_name="user.$hostname" > ../outputs/vault/pki_int_user.json
json data.private_key < ../outputs/vault/pki_int_user.json > ../outputs/certs/user.key
json data.certificate < ../outputs/vault/pki_int_user.json > ../outputs/certs/user.crt
json data.issuing_ca < ../outputs/vault/pki_int_user.json > ../outputs/certs/user.ca

# -------------------------------------
# Move certificates

cp -v ../outputs/certs/* /etc/certs


# =====================================
# Restart Services

echo ''
echo 'Stopping services...'
systemctl daemon-reload
sudo systemctl stop vault
sudo systemctl stop consul

echo ''
echo 'Reconfiguring services...'
./service_configure consul
./service_configure vault

echo ''
echo 'Restarting services...'
systemctl daemon-reload
sudo systemctl start consul
sudo systemctl start vault
sleep 5

echo ''
echo 'Checking Consul...'
sudo systemctl status consul

echo ''
echo 'Checking Vault...'
sudo systemctl status vault # || /usr/local/bin/vault server -config=/etc/systemd/system/vault.d

echo ''
echo 'Reunsealing Vault...'
./vault_unseal

echo ''
echo 'Checking Consul...'
source ./consul_env
consul info

echo ''
echo 'Checking Vault...'
source ./vault_env
vault status
